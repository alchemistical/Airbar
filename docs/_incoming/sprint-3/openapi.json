{"openapi":"3.0.3","info":{"title":"Airbar API","version":"1.0.0","description":"\n        **Airbar Crowdshipping Platform API**\n        \n        A comprehensive API for the Airbar peer-to-peer crowdshipping platform that connects travelers with people who need packages delivered.\n        \n        ## Features\n        - User authentication and authorization\n        - Trip and package management  \n        - Matching system for travelers and senders\n        - Wallet and payment processing\n        - Real-time chat functionality\n        - Booking and escrow services\n        \n        ## Authentication\n        This API uses JWT (JSON Web Tokens) for authentication. Include the token in the Authorization header:\n        `Authorization: Bearer <your-jwt-token>`\n        \n        ## Rate Limiting\n        API endpoints are rate limited to prevent abuse:\n        - General endpoints: 100 requests per 15 minutes per IP\n        - Authentication endpoints: Various limits (see individual endpoints)\n        - Authenticated users may have higher limits\n        \n        ## Error Handling\n        All errors follow a consistent format with appropriate HTTP status codes and detailed error information.\n      ","contact":{"name":"Airbar API Support","email":"api-support@airbar.com","url":"https://docs.airbar.com"},"license":{"name":"Proprietary","url":"https://airbar.com/terms"}},"servers":[{"url":"http://localhost:3001","description":"Development server"},{"url":"https://api-staging.airbar.com","description":"Staging server"},{"url":"https://api.airbar.com","description":"Production server"}],"components":{"securitySchemes":{"BearerAuth":{"type":"http","scheme":"bearer","bearerFormat":"JWT","description":"JWT token obtained from login endpoint"},"ApiKeyAuth":{"type":"apiKey","in":"header","name":"X-API-Key","description":"API key for service-to-service authentication"}},"schemas":{"SuccessResponse":{"type":"object","required":["success","data"],"properties":{"success":{"type":"boolean","example":true,"description":"Indicates if the request was successful"},"data":{"type":"object","description":"Response data payload"}}},"ErrorResponse":{"type":"object","required":["success","error"],"properties":{"success":{"type":"boolean","example":false,"description":"Always false for error responses"},"error":{"type":"object","required":["code","message"],"properties":{"code":{"type":"string","example":"VALIDATION_ERROR","description":"Machine-readable error code"},"message":{"type":"string","example":"Validation failed","description":"Human-readable error message"},"details":{"type":"object","description":"Additional error context (validation errors, etc.)"},"correlationId":{"type":"string","format":"uuid","description":"Unique request identifier for tracing"},"retryAfter":{"type":"integer","description":"Seconds to wait before retrying (rate limiting)"}}}}},"User":{"type":"object","required":["id","email","username"],"properties":{"id":{"type":"string","format":"uuid","description":"Unique user identifier"},"email":{"type":"string","format":"email","description":"User email address"},"username":{"type":"string","minLength":3,"maxLength":30,"pattern":"^[a-zA-Z0-9_-]+$","description":"Unique username"},"firstName":{"type":"string","maxLength":50,"description":"User first name (optional)"},"lastName":{"type":"string","maxLength":50,"description":"User last name (optional)"},"emailVerified":{"type":"boolean","description":"Whether email is verified"},"phoneVerified":{"type":"boolean","description":"Whether phone is verified"},"kycStatus":{"type":"string","enum":["PENDING","APPROVED","REJECTED","EXPIRED"],"description":"Know Your Customer verification status"},"isActive":{"type":"boolean","description":"Whether user account is active"},"createdAt":{"type":"string","format":"date-time","description":"Account creation timestamp"},"updatedAt":{"type":"string","format":"date-time","description":"Account last update timestamp"}}},"LoginRequest":{"type":"object","required":["email","password"],"properties":{"email":{"type":"string","format":"email","description":"User email address"},"password":{"type":"string","minLength":8,"description":"User password"}}},"RegisterRequest":{"type":"object","required":["email","password","username"],"properties":{"email":{"type":"string","format":"email","description":"User email address"},"password":{"type":"string","minLength":8,"pattern":"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)","description":"Password (min 8 chars, must contain uppercase, lowercase, and number)"},"username":{"type":"string","minLength":3,"maxLength":30,"pattern":"^[a-zA-Z0-9_-]+$","description":"Unique username"},"firstName":{"type":"string","maxLength":50,"description":"First name (optional)"},"lastName":{"type":"string","maxLength":50,"description":"Last name (optional)"}}},"AuthResponse":{"type":"object","required":["success","data"],"properties":{"success":{"type":"boolean","example":true},"data":{"type":"object","required":["user","token","refreshToken"],"properties":{"user":{"$ref":"#/components/schemas/User"},"token":{"type":"string","description":"JWT access token"},"refreshToken":{"type":"string","description":"Refresh token for obtaining new access tokens"},"expiresIn":{"type":"integer","description":"Token expiration time in seconds"}}}}},"HealthResponse":{"type":"object","required":["status","timestamp"],"properties":{"status":{"type":"string","enum":["ok","degraded","error"],"description":"Overall system health status"},"timestamp":{"type":"string","format":"date-time","description":"Health check timestamp"},"uptime":{"type":"number","description":"System uptime in seconds"},"version":{"type":"string","description":"API version"},"environment":{"type":"string","enum":["development","staging","production"],"description":"Current environment"},"services":{"type":"object","properties":{"database":{"type":"string","enum":["ok","checking","error"],"description":"Database connectivity status"},"redis":{"type":"string","enum":["ok","checking","error"],"description":"Redis connectivity status"},"api":{"type":"string","enum":["ok","error"],"description":"API service status"}}}}}},"parameters":{"CorrelationId":{"name":"X-Correlation-ID","in":"header","required":false,"schema":{"type":"string","format":"uuid"},"description":"Optional correlation ID for request tracing"}},"responses":{"UnauthorizedError":{"description":"Authentication required","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"},"example":{"success":false,"error":{"code":"UNAUTHORIZED","message":"Authentication required","correlationId":"123e4567-e89b-12d3-a456-426614174000"}}}}},"ForbiddenError":{"description":"Insufficient permissions","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"},"example":{"success":false,"error":{"code":"FORBIDDEN","message":"Insufficient permissions","correlationId":"123e4567-e89b-12d3-a456-426614174000"}}}}},"ValidationError":{"description":"Input validation failed","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"},"example":{"success":false,"error":{"code":"VALIDATION_ERROR","message":"Validation failed","details":[{"field":"email","message":"Valid email is required"},{"field":"password","message":"Password must be at least 8 characters"}],"correlationId":"123e4567-e89b-12d3-a456-426614174000"}}}}},"RateLimitError":{"description":"Rate limit exceeded","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"},"example":{"success":false,"error":{"code":"RATE_LIMIT_EXCEEDED","message":"Too many requests, please try again later","retryAfter":900,"correlationId":"123e4567-e89b-12d3-a456-426614174000"}}}}},"InternalServerError":{"description":"Internal server error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"},"example":{"success":false,"error":{"code":"INTERNAL_SERVER_ERROR","message":"An unexpected error occurred","correlationId":"123e4567-e89b-12d3-a456-426614174000"}}}}}}},"tags":[{"name":"Authentication","description":"User authentication and authorization endpoints"},{"name":"Users","description":"User management and profile operations"},{"name":"Trips","description":"Trip creation and management"},{"name":"Packages","description":"Package and parcel management"},{"name":"Booking","description":"Booking and matching system"},{"name":"Wallet","description":"Payment and wallet operations"},{"name":"Chat","description":"Real-time messaging system"},{"name":"Health","description":"System health and monitoring endpoints"}],"paths":{"/api/auth/register":{"post":{"tags":["Authentication"],"summary":"Register a new user account","description":"Creates a new user account with email, password, and username.\n\n**Rate Limiting:** 3 requests per hour per IP address\n\n**Password Requirements:**\n- Minimum 8 characters\n- At least one uppercase letter\n- At least one lowercase letter  \n- At least one number\n\n**Username Requirements:**\n- 3-30 characters\n- Letters, numbers, underscores, and hyphens only\n","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RegisterRequest"},"examples":{"example1":{"summary":"Complete registration","value":{"email":"john.doe@example.com","password":"SecurePass123","username":"johndoe","firstName":"John","lastName":"Doe"}},"example2":{"summary":"Minimal registration","value":{"email":"jane@example.com","password":"MyPassword1","username":"jane_smith"}}}}}},"responses":{"201":{"description":"User registered successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResponse"},"example":{"success":true,"data":{"user":{"id":"123e4567-e89b-12d3-a456-426614174000","email":"john.doe@example.com","username":"johndoe","firstName":"John","lastName":"Doe","emailVerified":false,"phoneVerified":false,"kycStatus":"PENDING","isActive":true,"createdAt":"2024-01-01T12:00:00.000Z","updatedAt":"2024-01-01T12:00:00.000Z"},"token":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...","refreshToken":"refresh_token_here","expiresIn":3600}}}}},"400":{"$ref":"#/components/responses/ValidationError"},"409":{"description":"Email or username already exists","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"},"example":{"success":false,"error":{"code":"USER_ALREADY_EXISTS","message":"Email or username already exists"}}}}},"429":{"$ref":"#/components/responses/RateLimitError"},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/api/auth/login":{"post":{"tags":["Authentication"],"summary":"Authenticate user and obtain JWT token","description":"Authenticates a user with email and password, returning JWT tokens for API access.\n\n**Rate Limiting:** 5 failed attempts per 10 minutes per IP address\n**Brute Force Protection:** Account locked after 10 failed attempts per hour\n\nThe returned JWT token should be included in subsequent API requests:\n`Authorization: Bearer <token>`\n","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginRequest"},"example":{"email":"john.doe@example.com","password":"SecurePass123"}}}},"responses":{"200":{"description":"Login successful","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthResponse"}}}},"400":{"$ref":"#/components/responses/ValidationError"},"401":{"description":"Invalid credentials","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"},"example":{"success":false,"error":{"code":"INVALID_CREDENTIALS","message":"Invalid email or password"}}}}},"429":{"description":"Rate limit exceeded or account locked","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ErrorResponse"},"examples":{"rate_limit":{"summary":"Rate limit exceeded","value":{"success":false,"error":{"code":"RATE_LIMIT_EXCEEDED","message":"Too many login attempts, please try again in 10 minutes","retryAfter":600}}},"account_locked":{"summary":"Account temporarily locked","value":{"success":false,"error":{"code":"ACCOUNT_TEMPORARILY_LOCKED","message":"Account temporarily locked due to too many failed attempts","retryAfter":3600}}}}}}},"500":{"$ref":"#/components/responses/InternalServerError"}}}},"/api/health":{"get":{"tags":["Health"],"summary":"Basic health check","description":"Returns basic system health information including uptime, version, and environment.\nThis is a lightweight endpoint suitable for load balancer health checks.\n","responses":{"200":{"description":"System is healthy","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthResponse"},"example":{"status":"ok","timestamp":"2024-01-01T12:00:00.000Z","uptime":3600,"version":"1.0.0","environment":"development"}}}},"503":{"description":"System is unhealthy","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthResponse"},"example":{"status":"error","timestamp":"2024-01-01T12:00:00.000Z","error":"Database connection failed"}}}}}}},"/api/health/detailed":{"get":{"tags":["Health"],"summary":"Detailed health check with service dependencies","description":"Comprehensive health check that tests connectivity to all dependencies\nincluding database and Redis. This endpoint is slower but provides\ndetailed service status information.\n","responses":{"200":{"description":"All services are healthy","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthResponse"}}}},"503":{"description":"One or more services are unhealthy","content":{"application/json":{"schema":{"$ref":"#/components/schemas/HealthResponse"}}}}}}}}}